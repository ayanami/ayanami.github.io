<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Php | NO プログラム NO LIFE]]></title>
  <link href="http://ayanami.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://ayanami.github.io/"/>
  <updated>2014-06-28T03:50:24+09:00</updated>
  <id>http://ayanami.github.io/</id>
  <author>
    <name><![CDATA[Yoshimasa.Suzuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[PHP]Yii + Ajaxで部分テンプレートを表示する]]></title>
    <link href="http://ayanami.github.io/blog/php/render-partial-yii/"/>
    <updated>2014-06-17T02:33:18+09:00</updated>
    <id>http://ayanami.github.io/blog/php/render-partial-yii</id>
    <content type="html"><![CDATA[<p><code>Yii</code>フレームワークを利用して、部分テンプレートを実装する方法。<code>foo</code>を<code>bar</code>に書き換えてみる。</p>

<p>まずはベースとなる<code>base.tpl</code>。
```</p>

<script type="text/javascript" src="{Yii::app()->request->baseUrl}/js/ajax.js"></script>


<div id="button">fooをbarに書き換える</div>


<div id="replace-area">foo</div>


<p>```</p>

<p>続いて、テンプレートとなる<code>part.tpl</code>
<code>
bar
</code></p>

<p>テンプレートをレンダリングする<code>ajax_content.php</code>。
<code>
&lt;?php echo $data; ?&gt;
</code></p>

<p><code>base.tpl</code>で読み込んでいる<code>ajax.js</code>
```
$(document).ready(function() {&lsquo;use strict&rsquo;;</p>

<pre><code>$(document).on('click', '#button', function() {
    toBar();
});

function toBar() {
    return $.ajax({
        type: "GET",
        url: $("#base-url").val(),
        data: {
            ajaxRequest: "ajaxRequest"
        },
        complete: function(response) {
            var json = $.parseJSON(response.responseText);
            $("#replace-area").empty();
            if (json.data.content.length &gt; 0) {
                $("#replace-area").append(json.data.content);
            };
        }
    });
};
</code></pre>

<p>});
```</p>

<p>最後に<code>AjaxController.php</code>。<code>CController#renderPartial()</code>を利用する。
```
public function actionIndex()
{</p>

<pre><code>// Ajaxのリクエストを判定。
if (isset($_GET['ajaxRequest']))
{
    // 部分テンプレートを文字列として取得。
    // 第3引数をtrueにすることで、文字列として取得できる。
    $content = $this-&gt;renderPartial('part', array(
            'baseUrl' =&gt; Yii::app()-&gt;createUrl('base'),
        ), true);

    $data = array(
            'content' =&gt; $content,
        );

    // アウトプットを文字列としてレンダリング。
    // 第4引数をtrueにすることで、文字列としてレンダリングできる。
    $this-&gt;renderPartial('ajax_content', CJSON::encode(array('data'=&gt;$data)), false, true);
}
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[PHP]SmartyでYiiのWidgetを使う]]></title>
    <link href="http://ayanami.github.io/blog/php/yii-widget-by-smarty/"/>
    <updated>2014-06-05T01:12:40+09:00</updated>
    <id>http://ayanami.github.io/blog/php/yii-widget-by-smarty</id>
    <content type="html"><![CDATA[<p><code>Yii</code>フレームワークの<code>Widget</code>を普通に使う場合はこんな感じ。
```
&lt;?php $this->widget(&lsquo;zii.widgets.jui.CJuiDatePicker&rsquo;, array(</p>

<pre><code>'model'=&gt;$model,
'attribute'=&gt;'birthday',
'language'=&gt;'ja',
'options'=&gt;array(
    'dateFormat'=&gt;'yy-mm-dd',
    'firstDay' =&gt; 1,
    'yearRange'=&gt;'1900:+0',
    'changeYear'=&gt;'true',
    'changeMonth'=&gt;'true'
),
</code></pre>

<p>)); ?>
```</p>

<p><code>Smarty</code>テンプレートエンジンを使った場合はこんな感じ。
<code>array</code>の書き方と、<code>widget</code>の第3引数の<code>true</code>がポイント。
```
{$this->widget(&lsquo;zii.widgets.jui.CJuiDatePicker&rsquo;, [</p>

<pre><code>'model'=&gt;$model,
'attribute'=&gt;'birthday',
'language'=&gt;'ja',
'options'=&gt;[
    'dateFormat'=&gt;'yy-mm-dd',
    'firstDay' =&gt; 1,
    'yearRange'=&gt;'1900:+0',
    'changeYear'=&gt;'true',
    'changeMonth'=&gt;'true'
]
</code></pre>

<p>], true)}
```</p>
]]></content>
  </entry>
  
</feed>
